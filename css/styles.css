* En este archivo escriban su CSS */

/* Fonts */
/* Importar aquí la font */
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&family=Source+Sans+Pro:ital,wght@1,200&display=swap');


/* Aquí les dejamos como ayuda este "reset" en el cual ajustamos algunas propiedades
*  cuyos valores asigna por defecto el navegador. 
*/

/* Reset */
* { box-sizing: border-box;
    margin: 0;
    padding: 0;
    /* Para que el scrolleo en la one page sea suave */
    scroll-behavior: smooth;
 }

body {
     font-family: "Lato", sans-serif ;
     font-size: 18px;
     line-height: 1,2; 
     background-color: #fbfbfb;
     color: #0f0f0f;
}
.logo {
    width:120px; 
}
ul {
    list-style: none;
}

header{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    width: 100%;
    height: 90px;
    position: fixed;
    top: 0;
    left: 0;
    border-bottom: 1px solid black;
    background-color: #fbfbfb;
    box-shadow: 0 3px 10px -5px #5f5f5f;

}


/* Para quitar los puntos a los items de listas */

ul#menu {
    list-style: none;
    display: flex;
    margin-left: 15px;
    margin-right: 15px;
    font-size: 20px;
    

    /*  list-style: none;
    display: flex;
    justify-content: space-evenly;
    align-items: center;*/

}
li.menu-item a {
    text-decoration: none;
    color: #000;
    padding: 20px;
}

li.menu-item a:hover {
    background-color: rgba(175, 89, 158, 0.3);
    transition: background-color 0,3s;
    color: #fff;
}


/* a {
    text-decoration: none;
    color: inherit;
}
Para que los enlaces hereden el color de texto y no tengan subrayado */


/* Este max-width es para que el contenido no se "estire" demasiado hacia los costados y
*  el margin: auto; para tenerlo centrado fácilmente ;)
*/
 main {
    max-width: 1200px;
    margin: auto;
    padding: 120px;

} 

section {
    display: flex;
    align-items: center;
    justify-content: space-around;
    height: 100vh;
    scroll-margin-top:100px ;
    padding-top: 20px;
    padding-bottom: 10px;
    min-height: 100vh;
    
}

.yukki{
    width: 400px;
    border-radius: 50%;
    margin: 50px;
    float: left;
}

a {
    text-decoration: none;
    color: inherit;
}
h1{ 
    display: flex;
    justify-content: left;
    font-size: 48px;
}

p{
    padding-top: 20px;
    padding-bottom: 20px;
}


.cv{
    text-decoration: none;
    color: #000;
    padding: 20px;
    background-color: #af599e;
    color: #fbfbfb;
    border-radius: 25%;
    font-size: 20px; 
      
}
.cv a :hover{
    background-color: #e4b0d9;
}

#contacto{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    
   
}

#hablemos{
    background-color:  rgba(175, 89, 158, 0.3);
    border-radius: 25px;
    padding: 40px;
    margin: 15%;
}

h2{
    font-size:32px;
    text-align: center;
}

#redes-sociales{
    display: flex;
    justify-content: center;
   
}
#redes-sociales a img {
    
    border-radius: 5px;
    padding: 10px;



}

.redes{
    display: flex;
    display: inline-block;
    background-color: #fbfbfb;
         
}
.redes a :hover{
    background-color:  rgba(175, 89, 158, 0.3);
    transition: background-color 0.3s;
}

#Logo {

    width: 90px;

}


footer {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 90px;
    background-color: #af599e;
    color: #fff;
}






/* Recomendaciones! 
*  - Comenzar desde lo más general y luego ir hacia lo mas específico, asignando primero
*    "estilos generales". Una buena idea sería comenzar por el <body> ;)
*
*  - Recuerden que queremos evitar "repetir código", en CSS usando la cualidad de la herencia
*    podemos setear ciertas propiedades en un elemento padre y dejar que sean heredadas (por ejemplo: font-size)
*
*  - Nadie sabe todas las propiedades CSS de memoria, si no saben como hacer algo no lo recuerdan, la respuesta
*    pueden encontrarla buscando en la web algo como "CSS como hacer ... " o "propiedad css para hacer ..."
*
*  - Usen mucho las herramientas para desarrolladores del navegador para ir
*    probando el CSS que escriben, resolver dudas y problemas.
*
*  - Paciencia, resiliencia y creatividad! No se desanimen, las primeras experiencias maquetando con HTML y CSS
*    pueden ser frustrantes, pero estas habilidades se van desarrollando con la experiencia, es como aprender
*    un trabajo manual, hacer una artesanía, tocar un instrumento musical... la práctica es todo!
*/